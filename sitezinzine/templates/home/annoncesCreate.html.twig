{% extends 'base.html.twig' %}

{% block title 'Cr√©er une annonce' %}

{% block body %}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/fr.js"></script>


<style>
    .anedit img {
        width: 150px;
        margin: auto;
    }
    .anedit {
        background: linear-gradient(#E4013A, #B81C61);
        background-size: 100%;
        width: 100%;
        margin: 0%;
        padding: 0%;
        display: flex;
        flex-direction: column;
        font-family: "Montserrat Alternates", sans-serif;
        font-weight: 500;
        font-style: normal;
        }
    .anedit .top img{
        width: 100%;
    }

    .anedit .tox-checklist > li:not(.tox-checklist--hidden) {
    list-style: none;
    margin: 0.25em 0;
    position: relative;
    }
    .anedit .tox-checklist > li:not(.tox-checklist--hidden)::before {
    content: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%3E%3Cg%20id%3D%22checklist-unchecked%22%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%3Crect%20id%3D%22Rectangle%22%20width%3D%2215%22%20height%3D%2215%22%20x%3D%22.5%22%20y%3D%22.5%22%20fill-rule%3D%22nonzero%22%20stroke%3D%22%234C4C4C%22%20rx%3D%222%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E%0A");
    cursor: pointer;
    height: 1em;
    margin-left: -1.5em;
    margin-top: 0.125em;
    position: absolute;
    width: 1em;
    }
    .anedit .tox-checklist li:not(.tox-checklist--hidden).tox-checklist--checked::before {
    content: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%3E%3Cg%20id%3D%22checklist-checked%22%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%3Crect%20id%3D%22Rectangle%22%20width%3D%2216%22%20height%3D%2216%22%20fill%3D%22%234099FF%22%20fill-rule%3D%22nonzero%22%20rx%3D%222%22%2F%3E%3Cpath%20id%3D%22Path%22%20fill%3D%22%23FFF%22%20fill-rule%3D%22nonzero%22%20d%3D%22M11.5703186%2C3.14417309%20C11.8516238%2C2.73724603%2012.4164781%2C2.62829933%2012.83558%2C2.89774797%20C13.260121%2C3.17069355%2013.3759736%2C3.72932262%2013.0909105%2C4.14168582%20L7.7580587%2C11.8560195%20C7.43776896%2C12.3193404%206.76483983%2C12.3852142%206.35607322%2C11.9948725%20L3.02491697%2C8.8138662%20C2.66090143%2C8.46625845%202.65798871%2C7.89594698%203.01850234%2C7.54483354%20C3.373942%2C7.19866177%203.94940006%2C7.19592841%204.30829608%2C7.5386474%20L6.85276923%2C9.9684299%20L11.5703186%2C3.14417309%20Z%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E%0A");
    }

    .anedit input[type=text], .anedit select {
    width: 100%;
    padding: 12px 20px;
    margin: 8px 0;
    display: inline-block;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
  }

  .anedit input[type=submit] {
    width: 100%;
    background-color: #4CAF50;
    color: white;
    padding: 14px 20px;
    margin: 8px 0;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  .anedit input[type=submit]:hover {
    background-color: #45a049;
  }

  .anedit form {
    padding: 50px;
  }
  .anedit div.mb-3 {
    margin: 15px;
  }
  .anedit label {
    margin-bottom: 15px;
  }
  
  .anedit #mceu_14 {
    margin: 15px 0;
  }

  .anedit textarea {
    width: auto;
  }
  .anedit .form-label { color:white;
  font-family: "Montserrat Alternates", sans-serif;
  font-weight: normal;
  font-style: normal;
  
  font-size: 16pt;
  }
  .anedit input {
    width: 100%;
    padding: 12px 20px;
    margin: 8px 0;
    display: inline-block;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
  }
  .anedit h1 {
    color:white;
    font-family: "Montserrat Alternates", sans-serif;
    font-weight: 900;
    font-style: normal;
    justify-content: center;
    align-items: center;
    text-align: center;
    font-size: 36pt;
    margin: 20px;
  }

  .anedit .form-check {
    width: 100%;
    padding: 12px 20px;
    margin: 8px 0;
    display: inline-block;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
    font-family: "Montserrat Alternates", sans-serif;
  font-weight: normal;
  font-style: normal;
  color: white;
  font-size: 16pt;
  align-items: center;
    text-align: center;
  }
  .anedit .ligne1, .anedit .ligne3, .anedit .ligne4, .anedit .ligne6, .anedit .ligne7 {
    display: flex;
    flex-direction: row;
    justify-content: space-between; /* üî• Espacement maximal entre les champs */
    gap: 10px; /* üî• Ajoute un espace entre les champs */
    width: 100%; /* üî• Occupe toute la largeur du parent */
    
}

.anedit .ligne1 > div, .anedit .ligne3 > div, .anedit .ligne4 > div, .anedit .ligne6 > div, .anedit .ligne7 > div {
    flex: 1; /* üî• √âtire chaque champ pour qu'ils occupent un espace √©quitable */
    min-width: 200px; /* üî• Emp√™che que les champs deviennent trop petits */
}

.anedit .error-message {
    color: white !important; /* üî• Force la couleur blanche */
    font-size: 0.9em;
    font-weight: bold;
    margin-top: 5px;
    transition: opacity 0.3s ease-in-out;
    padding: 5px;
    border-radius: 5px;
    text-align: center;
}


.anedit .hidden-textarea {
    position: absolute;
    left: -9999px; /* üî• D√©place le champ hors √©cran au lieu de le cacher */
    visibility: hidden; /* üî• Assure qu'il n'est pas visible */
}




  
</style>
<div class="anedit">
<div class="top">
<img src="{{ asset('images/bottom-header.gif') }}"></div>
<h1>Cr√©er votre annonce</h1>

  


    {{ form_start(form) }}
    <div class="ligne1">
    {{ form_row(form.titre) }}
    {{ form_row(form.organisateur) }}
    {{ form_row(form.type, { 'attr': {'id': 'annonce_type'} }) }}
  <div id="autre-type-wrapper"{% if form.autreType.vars.data %}style="display: block;"{% else %}style="display: none;"{% endif %}>
      {{ form_row(form.autreType, { 'attr': {'id': 'annonce_autreType'} }) }}
  </div>
    </div>
   
<div class="ligne3">
    {{ form_row(form.ville) }}
    {{ form_row(form.departement) }}
    {{ form_row(form.adresse) }}
    </div>
    <div class="ligne4">
    {{ form_row(form.dateDebut, {
    attr: {
      'data-controller': 'flatpickr'
    }
}) }}
    {{ form_row(form.dateFin, {
    attr: {
      'data-controller': 'flatpickr'
    }
}) }}
    {{ form_row(form.horaire) }}
    {{ form_row(form.prix) }}
    </div>

    <div class="ligne6" data-controller="tinymce">
    {{ form_row(form.presentation) }}
    </div>
    <div class="ligne7">
    {{ form_row(form.contact) }}
    </div>
    {{ form_end(form) }}
</div>

<script defer>
document.addEventListener("DOMContentLoaded", function() {
    let typeSelect = document.getElementById("annonce_type"); // S√©lection du menu d√©roulant
    let autreTypeWrapper = document.getElementById("autre-type-wrapper"); // S√©lection du div contenant autreType
    let autreTypeInput = document.getElementById("annonce_autreType"); // S√©lection de l'input texte

    function toggleAutreType() {
      
        if (!typeSelect) {
            console.error("‚ö†Ô∏è ERREUR : annonce_type est NULL !");
            return;
        }

        // ‚úÖ V√©rifier avec "autre" en minuscule pour correspondre √† ChoiceType
        if (typeSelect.value.toLowerCase() === "autre") {
          autreTypeInput.style.display = "block"; // üî• Affiche l'input au lieu de juste le div
          autreTypeWrapper.style.display = "block"; // ‚úÖ Afficher le champ si "Autre" est s√©lectionn√©
            
        } else {
            autreTypeWrapper.style.display = "none"; // ‚úÖ Cacher le champ sinon
            autreTypeInput.value = ''; // R√©initialiser si on s√©lectionne autre chose
        }
    }

    // ‚úÖ V√©rifie si un type personnalis√© est d√©j√† s√©lectionn√©
    if (typeSelect.value.toLowerCase() === "autre") {
        autreTypeWrapper.style.display = "block";
    }

    // Ex√©cuter imm√©diatement pour masquer si n√©cessaire
    toggleAutreType();

    // √âcouter les changements sur le select
    typeSelect.addEventListener("change", toggleAutreType);    
});



</script>

<script defer>
document.addEventListener("DOMContentLoaded", function() {
    // üî• D√©finition des champs et de leurs limites de caract√®res
    let fieldsWithLimits = {
        "annonce_titre": 100,
        "annonce_organisateur": 100,
        "annonce_ville": 50,
        "annonce_adresse": 50,
        "annonce_horaire": 50,
        "annonce_prix": 50,
        "annonce_contact": 100,
        "annonce_type": 50,
        "annonce_autreType": 50
    };

    // üî• Fonction de validation
    function enforceMaxLength(event) {
        let field = event.target;
        let maxLength = fieldsWithLimits[field.id];

        // V√©rifie si le message d'erreur existe d√©j√†
        let errorMessage = field.nextElementSibling;
        if (!errorMessage || !errorMessage.classList.contains("error-message")) {
            errorMessage = document.createElement("div");
            errorMessage.className = "error-message";
            errorMessage.style.color = "red";
            errorMessage.style.fontSize = "0.9em";
            errorMessage.style.marginTop = "5px";
            field.parentNode.appendChild(errorMessage);
        }

        if (field.value.length >= maxLength) {
            errorMessage.textContent = `üö® Ce champ est limit√© √† ${maxLength} caract√®res.`;
            field.value = field.value.substring(0, maxLength); // Coupe imm√©diatement le texte
        } else {
            errorMessage.textContent = ""; // Efface le message si la limite n'est pas atteinte
        }
    }

    // üî• Applique l'√©v√©nement √† tous les champs concern√©s
    Object.keys(fieldsWithLimits).forEach(function(fieldId) {
        let field = document.getElementById(fieldId);
        if (field) {
            field.addEventListener("input", enforceMaxLength);
        }
    });


});
</script>


{% endblock %}